require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const saveMind = require("./firebase/addMind");
const deleting = require("./firebase/deleteMind");
const process = require("process");
const keyboard = require('./keyboards');
const voiceRecognition = require('./voiceRecognition');
const reducerOfBtns = require('./reducerOfBtns');

const bot = new TelegramBot(process.env.TELEGRAM_TOKEN, {polling: true});

let isNewSessionPC = true;
let mindIsWritten = false;
function setMindIsTyping (value) {
    mindIsWritten = value;
}
let numberMindIsWritten = false;
function setNumberMindIsTyping (value) {
    numberMindIsWritten = value;
}

const switcher = async (msg, chatId) => {
    if(mindIsWritten){
        if(msg.text.toLowerCase() === '–æ—Ç–º–µ–Ω–∞'){
            mindIsWritten = false;
            await bot.sendMessage(chatId, '–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º—ã—Å–ª–∏ –≤ –±–ª–æ–∫–Ω–æ—Ç!');
        } else {
            const result = await saveMind(msg.text);
            mindIsWritten = false;
            await bot.sendMessage(chatId, result);
        }
    } else {
        if ((msg.text.toLowerCase() === '–ø–∫' ||
            msg.text.toLowerCase() === '–æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π üíÅüèª')) {
            await bot.sendMessage(chatId, '–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Å –ü–ö ?', keyboard.pcMenu);
        }
        if ((msg.text.toLowerCase() === '–æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –±–ª–æ–∫–Ω–æ—Ç–∞ –º—ã—Å–ª–µ–π üåç')){
            await bot.sendMessage(chatId, 'üìë              –ë–ª–æ–∫–Ω–æ—Ç', keyboard.mindsMenu);
        }
        if(numberMindIsWritten && (Number(msg.text)> 0 && Number(msg.text) < 99)){
            numberMindIsWritten = false;
            const response = await deleting.deleteMind(Number(msg.text));
            await bot.sendMessage(chatId, response, keyboard.mainMenuOptions);
        }
        else if (msg.text !== '–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π üíÅüèª' &&
            msg.text !== '–ó–∞–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É ü§ì' &&
            msg.text !== '–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –±–ª–æ–∫–Ω–æ—Ç–∞ –º—ã—Å–ª–µ–π üåç') {
            await bot.sendMessage(chatId, '–Ø —Ç–µ–±—è —É—Å–ª—ã—à–∞–ª, –Ω–æ —á–µ—Ç –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —á–µ —Ç—ã' +
                ' —Ö–æ—á–µ—à—å ü§® üòë, –ø–æ—ç—Ç–æ–º—É –æ—Ç—Ä–æ—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É');
            await bot.sendMessage(chatId, '–û—Ç–∫—Ä—ã–≤–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É', keyboard.mainMenuOptions);
        }
    }
}

process.on('exit', (code) => {
    console.log(`About to exit with code: ${code}`);
});

bot.onText(/\/echo (.+)/, (msg, match) => {
    const chatId = msg.chat.id;
    const resp = match[1];
    bot.sendMessage(chatId, resp);
});

bot.on('callback_query', async (query) =>
    reducerOfBtns(query,bot)
);

bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    if(isNewSessionPC){
        isNewSessionPC = false;
        await bot.sendSticker(chatId,'https://tlgrm.ru/_/stickers/629/439/62943973-f1e5-422a-91ff-0436fd9c9722/33.webp');
    }
    if (msg.chat.username === 'calmfish') {
        if (msg.text) {
            await switcher(msg,chatId);
        } else {
            voiceRecognition(msg,bot);
        }
    } else {
        await bot.sendMessage(chatId, `–ú–æ–π —Ö–æ–∑—è–∏–Ω –î–µ–Ω–∏—Å –†—ã–±–∫–∏–Ω, –∞ ${msg.from.first_name} ${msg.from.last_name} –Ω–µ –±—É–¥–µ—Ç –º–Ω–æ–π —É–ø—Ä–∞–≤–ª—è—Ç—åü§¨`);
        await bot.sendSticker(chatId, 'https://tlgrm.ru/_/stickers/629/439/62943973-f1e5-422a-91ff-0436fd9c9722/27.webp');
        await bot.sendSticker(chatId, 'https://tlgrm.ru/_/stickers/fab/e9f/fabe9f3a-d6ad-4d45-8e0d-478f9278d228/3.webp');
    }
});
bot.on("polling_error", console.log);

module.exports.setMindIsTyping = setMindIsTyping;
module.exports.setNumberMindIsTyping = setNumberMindIsTyping;